{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMrnszYDMKkZv4YM1ArceZo",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/HubNin/Entrega/blob/main/EGC/Lasso.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EbnlhB81UuEB",
        "outputId": "08596e27-7fdd-4e43-dd23-91146a472784"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /gdrive; to attempt to forcibly remount, call drive.mount(\"/gdrive\", force_remount=True).\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/gdrive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df_train = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vTiCSR9l0tA6oCwszNdVA0zpLzOnLJ4uQ2KUS4DrCUjlwvMOqrsT9toGoqL7Bor54M6E0STf4soRVRK/pub?gid=246399989&single=true&output=csv')\n",
        "df_test = pd.read_csv('https://docs.google.com/spreadsheets/d/e/2PACX-1vTwKLAAqFzivxJ_8pLPr2ed0U77fUYaDMGdrGpdLpXeY-mjp_4r7gPUI01aoMkebnlci2oNHnkhIfJY/pub?gid=444091158&single=true&output=csv')"
      ],
      "metadata": {
        "id": "aR5mqXNdVDz6"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Pandas a arreglos numpy\n",
        "datos_train = df_train.values\n",
        "datos_test = df_test.values\n",
        "\n",
        "# Etiquetas\n",
        "cat_train = datos_train[:,0]\n",
        "cat_test = datos_test[:,0]\n",
        "\n",
        "# Subdivisión por categorías\n",
        "x_train_1 = datos_train[cat_train==1,1:]\n",
        "x_train_2 = datos_train[cat_train==2,1:]\n",
        "x_train_3 = datos_train[cat_train==3,1:]\n",
        "x_train_4 = datos_train[cat_train==4,1:]\n",
        "x_train_5 = datos_train[cat_train==5,1:]\n",
        "\n",
        "x_test_1 = datos_test[cat_test==1,1:]\n",
        "x_test_2 = datos_test[cat_test==2,1:]\n",
        "x_test_3 = datos_test[cat_test==3,1:]\n",
        "x_test_4 = datos_test[cat_test==4,1:]\n",
        "x_test_5 = datos_test[cat_test==5,1:]"
      ],
      "metadata": {
        "id": "V_bgu61CuygX"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Dibujar un dato normal y uno de cada anormal\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "ind = 10\n",
        "normal = x_train_1[ind]\n",
        "anormal_2 = x_train_2[ind]\n",
        "anormal_3 = x_train_3[ind]\n",
        "anormal_4 = x_train_4[ind]\n",
        "anormal_5 = x_train_5[ind]\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "plt.grid()\n",
        "plt.subplot(2,2,1)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_2, 'r--')\n",
        "plt.subplot(2,2,2)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_3, 'r--')\n",
        "plt.subplot(2,2,3)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_4, 'r--')\n",
        "plt.subplot(2,2,4)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_5, 'r--')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 699
        },
        "id": "9O7vyTLupGK_",
        "outputId": "e7a8b527-7fe8-428d-d279-39aa3b94e72e"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7c251189b6d0>]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "min_max_scaler = MinMaxScaler()\n",
        "\n",
        "x_train_1_s = min_max_scaler.fit_transform(x_train_1)\n",
        "print('Mínimo y máximo originales: {:.1f}, {:.1f}'.format(np.min(x_train_1), np.max(x_train_1)))\n",
        "print('Mínimo y máximo normalización: {:.1f}, {:.1f}'.format(np.min(x_train_1_s), np.max(x_train_1_s)))\n",
        "\n",
        "x_test_1_s = min_max_scaler.transform(x_test_1)\n",
        "x_test_2_s = min_max_scaler.transform(x_test_2)\n",
        "x_test_3_s = min_max_scaler.transform(x_test_3)\n",
        "x_test_4_s = min_max_scaler.transform(x_test_4)\n",
        "x_test_5_s = min_max_scaler.transform(x_test_5)"
      ],
      "metadata": {
        "id": "-pjKazb7u6Tc",
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6aa50ac4-bf13-469d-924b-64efa04cb1bc"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mínimo y máximo originales: -7.1, 5.0\n",
            "Mínimo y máximo normalización: 0.0, 1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.models import Model\n",
        "from tensorflow.keras.layers import Input, Dense\n",
        "np.random.seed(23)\n",
        "\n",
        "dim_entrada = x_train_1_s.shape[1]    #140 muestras/ejemplo\n",
        "entrada = Input(shape=(dim_entrada,))\n",
        "\n",
        "# Encoder\n",
        "encoder = Dense(32, activation='relu')(entrada)\n",
        "encoder = Dense(16, activation='relu')(encoder)\n",
        "encoder = Dense(8, activation='relu')(encoder)\n",
        "\n",
        "# Decoder\n",
        "decoder = Dense(16, activation='relu')(encoder)\n",
        "decoder = Dense(32, activation='relu')(decoder)\n",
        "decoder = Dense(140, activation='sigmoid')(decoder)\n",
        "\n",
        "# Autoencoder = entrada + decoder (que ya contiene el encoder)\n",
        "autoencoder = Model(inputs=entrada, outputs=decoder)\n",
        "\n",
        "autoencoder.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 353
        },
        "id": "6zbNC2rNu7-b",
        "outputId": "812b95e0-d917-48a3-c603-e2e49fb0aacd",
        "collapsed": true
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"functional\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m140\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)                  │           \u001b[38;5;34m4,512\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m16\u001b[0m)                  │             \u001b[38;5;34m528\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m8\u001b[0m)                   │             \u001b[38;5;34m136\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m16\u001b[0m)                  │             \u001b[38;5;34m144\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_4 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)                  │             \u001b[38;5;34m544\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_5 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m140\u001b[0m)                 │           \u001b[38;5;34m4,620\u001b[0m │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">140</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,512</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)                  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">528</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">136</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)                  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">144</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)                  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">544</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ dense_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">140</span>)                 │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,620</span> │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m10,484\u001b[0m (40.95 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">10,484</span> (40.95 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m10,484\u001b[0m (40.95 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">10,484</span> (40.95 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "autoencoder.compile(optimizer='adam', loss='mae')\n",
        "historia = autoencoder.fit(x_train_1_s, x_train_1_s,\n",
        "          epochs=20,\n",
        "          batch_size=512,\n",
        "          validation_data=(x_test_1_s, x_test_1_s),\n",
        "          shuffle=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zy5bwWEOvC6x",
        "outputId": "4d15eb4c-63e3-4219-f6d1-83debf53e668",
        "collapsed": true
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 45ms/step - loss: 0.1265 - val_loss: 0.1240\n",
            "Epoch 2/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.1215 - val_loss: 0.1145\n",
            "Epoch 3/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.1117 - val_loss: 0.1024\n",
            "Epoch 4/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0997 - val_loss: 0.0900\n",
            "Epoch 5/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0869 - val_loss: 0.0794\n",
            "Epoch 6/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0770 - val_loss: 0.0721\n",
            "Epoch 7/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0710 - val_loss: 0.0681\n",
            "Epoch 8/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0678 - val_loss: 0.0663\n",
            "Epoch 9/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0664 - val_loss: 0.0653\n",
            "Epoch 10/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0647 - val_loss: 0.0647\n",
            "Epoch 11/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0642 - val_loss: 0.0644\n",
            "Epoch 12/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0644 - val_loss: 0.0642\n",
            "Epoch 13/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0641 - val_loss: 0.0638\n",
            "Epoch 14/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0633 - val_loss: 0.0632\n",
            "Epoch 15/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0624 - val_loss: 0.0623\n",
            "Epoch 16/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0612 - val_loss: 0.0609\n",
            "Epoch 17/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0608 - val_loss: 0.0593\n",
            "Epoch 18/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.0589 - val_loss: 0.0578\n",
            "Epoch 19/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0570 - val_loss: 0.0565\n",
            "Epoch 20/20\n",
            "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0563 - val_loss: 0.0556\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ¿Qué tan bien reconstruye un dato \"normal\" y uno anormal?\n",
        "rec_normal = autoencoder(x_test_1_s).numpy()\n",
        "rec_anormal = autoencoder(x_test_5_s).numpy()\n",
        "\n",
        "dato = 5\n"
      ],
      "metadata": {
        "id": "hGewBskqvHwq",
        "collapsed": true
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Distribuciones de los errores de construcción\n",
        "# para cada categoría\n",
        "\n",
        "import tensorflow as tf\n",
        "\n",
        "rec_1 = autoencoder.predict(x_test_1_s)\n",
        "rec_2 = autoencoder.predict(x_test_2_s)\n",
        "rec_3 = autoencoder.predict(x_test_3_s)\n",
        "rec_4 = autoencoder.predict(x_test_4_s)\n",
        "rec_5 = autoencoder.predict(x_test_5_s)\n",
        "\n",
        "loss_1 = tf.keras.losses.mae(rec_1, x_test_1_s)\n",
        "loss_2 = tf.keras.losses.mae(rec_2, x_test_2_s)\n",
        "loss_3 = tf.keras.losses.mae(rec_3, x_test_3_s)\n",
        "loss_4 = tf.keras.losses.mae(rec_4, x_test_4_s)\n",
        "loss_5 = tf.keras.losses.mae(rec_5, x_test_5_s)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ta_K08QPvLFc",
        "outputId": "f18eb480-5b4d-4d5b-bab0-e4ddaa3e70c3",
        "collapsed": true
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step\n",
            "\u001b[1m22/22\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step\n",
            "\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step \n",
            "\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step \n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 55ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "umbral = np.mean(loss_1) + np.std(loss_1)\n"
      ],
      "metadata": {
        "id": "lOeqV4fhzaFP",
        "collapsed": true
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pip install twilio"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lm_WA04rpj7v",
        "outputId": "4260982d-dffa-4917-cf93-f050913b7fad"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting twilio\n",
            "  Downloading twilio-9.3.7-py2.py3-none-any.whl.metadata (12 kB)\n",
            "Requirement already satisfied: requests>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from twilio) (2.32.3)\n",
            "Requirement already satisfied: PyJWT<3.0.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from twilio) (2.10.0)\n",
            "Requirement already satisfied: aiohttp>=3.8.4 in /usr/local/lib/python3.10/dist-packages (from twilio) (3.11.2)\n",
            "Collecting aiohttp-retry==2.8.3 (from twilio)\n",
            "  Downloading aiohttp_retry-2.8.3-py3-none-any.whl.metadata (8.9 kB)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (2.4.3)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (1.3.1)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (24.2.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (1.5.0)\n",
            "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (6.1.0)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (0.2.0)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (1.17.2)\n",
            "Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.8.4->twilio) (4.0.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->twilio) (3.4.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->twilio) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->twilio) (2.2.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.0.0->twilio) (2024.8.30)\n",
            "Requirement already satisfied: typing-extensions>=4.1.0 in /usr/local/lib/python3.10/dist-packages (from multidict<7.0,>=4.5->aiohttp>=3.8.4->twilio) (4.12.2)\n",
            "Downloading twilio-9.3.7-py2.py3-none-any.whl (1.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m19.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading aiohttp_retry-2.8.3-py3-none-any.whl (9.8 kB)\n",
            "Installing collected packages: aiohttp-retry, twilio\n",
            "Successfully installed aiohttp-retry-2.8.3 twilio-9.3.7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from twilio.rest import Client\n",
        "\n",
        "account_sid = 'AC266f40b53fac6a3186ac1384d4b10a52'\n",
        "auth_token = '9793ef7f70a7830166db42e49fe709fb'\n",
        "client = Client(account_sid, auth_token)\n",
        "\n",
        "def enviar_alerta(mensaje):\n",
        "  message = client.messages.create(\n",
        "      from_='whatsapp:+14155238886',\n",
        "      body=mensaje,\n",
        "      to='whatsapp:+51936051282'\n",
        "  )\n",
        "  print(message.sid)\n",
        "\n",
        "def predecir(modelo, datos, umbral):\n",
        "  reconstrucciones = modelo(datos)\n",
        "  perdida = tf.keras.losses.mae(reconstrucciones, datos)\n",
        "  return tf.math.less(perdida, umbral)\n",
        "\n",
        "def calcular_sensitividad(prediccion, titulo):\n",
        "  TP = np.count_nonzero(~prediccion)\n",
        "  FN = np.count_nonzero(prediccion)\n",
        "  sen = 100*(TP/(TP+FN))\n",
        "\n",
        "  print(titulo + ': {:.1f}%'.format(sen))\n",
        "  return sen\n",
        "\n",
        "def calcular_especificidad(prediccion, titulo):\n",
        "  TN = np.count_nonzero(prediccion)\n",
        "  FP = np.count_nonzero(~prediccion)\n",
        "  esp = 100*(TN/(TN+FP))\n",
        "\n",
        "  print(titulo + ': {:.1f}%'.format(esp))\n",
        "  return esp\n",
        "\n",
        "\n",
        "# Predicciones\n",
        "pred_1 = predecir(autoencoder, x_test_1_s, umbral)\n",
        "pred_2 = predecir(autoencoder, x_test_2_s, umbral)\n",
        "pred_3 = predecir(autoencoder, x_test_3_s, umbral)\n",
        "pred_4 = predecir(autoencoder, x_test_4_s, umbral)\n",
        "pred_5 = predecir(autoencoder, x_test_5_s, umbral)\n",
        "\n",
        "# Pred1: especificidad\n",
        "esp_1 = calcular_especificidad(pred_1,'Especificidad (cat. 1, normales)')\n",
        "\n",
        "# Pred 2 a 5: sensitividad\n",
        "sen_2 = calcular_sensitividad(pred_2,'Sensitividad (cat. 2, anormales)')\n",
        "sen_3 = calcular_sensitividad(pred_3,'Sensitividad (cat. 3, anormales)')\n",
        "sen_4 = calcular_sensitividad(pred_4,'Sensitividad (cat. 4, anormales)')\n",
        "sen_5 = calcular_sensitividad(pred_3,'Sensitividad (cat. 5, anormales)')\n",
        "\n",
        "# Simular detección de anomalía (reemplaza con tu lógica real)\n",
        "anomalia1= esp_1 < 88.7\n",
        "anomalia2= sen_2 < 99.9\n",
        "anomalia3= sen_3 < 90.9\n",
        "anomalia4= sen_4 < 98.4\n",
        "anomalia5= sen_5 < 90.9\n",
        "\n",
        "if anomalia1:\n",
        "    mensaje = \"Se ha detectado una anomalía en la señal ECG.\"\n",
        "    enviar_alerta(mensaje)\n",
        "\n",
        "if anomalia2:\n",
        "    mensaje = \"Se ha detectado una anomalía en la señal ECG Anomalia 1.\"\n",
        "    enviar_alerta(mensaje)\n",
        "\n",
        "if anomalia3:\n",
        "    mensaje = \"Se ha detectado una anomalía en la señal ECG Anomalia 2.\"\n",
        "    enviar_alerta(mensaje)\n",
        "\n",
        "if anomalia4:\n",
        "    mensaje = \"Se ha detectado una anomalía en la señal ECG Anomalia 3.\"\n",
        "    enviar_alerta(mensaje)\n",
        "\n",
        "if anomalia5:\n",
        "    mensaje = \"Se ha detectado una anomalía en la señal ECG Anomalia 4.\"\n",
        "    enviar_alerta(mensaje)"
      ],
      "metadata": {
        "id": "1EDoGMBnvODA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "873f5a0e-9ad7-40a7-fcdc-582ab0eb158b"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Especificidad (cat. 1, normales): 88.7%\n",
            "Sensitividad (cat. 2, anormales): 100.0%\n",
            "Sensitividad (cat. 3, anormales): 90.9%\n",
            "Sensitividad (cat. 4, anormales): 100.0%\n",
            "Sensitividad (cat. 5, anormales): 90.9%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Dibujar un dato normal y uno de cada anormal\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "ind = 10\n",
        "normal = x_train_1[ind]\n",
        "anormal_2 = x_train_2[ind]\n",
        "anormal_3 = x_train_3[ind]\n",
        "anormal_4 = x_train_4[ind]\n",
        "anormal_5 = x_train_5[ind]\n",
        "\n",
        "plt.figure(figsize=(10,8))\n",
        "plt.grid()\n",
        "plt.subplot(2,2,1)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_2, 'r--')\n",
        "plt.subplot(2,2,2)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_3, 'r--')\n",
        "plt.subplot(2,2,3)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_4, 'r--')\n",
        "plt.subplot(2,2,4)\n",
        "plt.plot(np.arange(140), normal)\n",
        "plt.plot(np.arange(140), anormal_5, 'r--')"
      ],
      "metadata": {
        "id": "ten5Ev42EJXP"
      }
    }
  ]
}